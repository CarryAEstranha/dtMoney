{"version":3,"sources":["services/api.ts","hooks/useTransactions.tsx","components/Header/styles.ts","assets/logo.svg","components/Header/index.tsx","assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/styles.ts","components/Dashboard/index.tsx","components/NewTransactionModal/styles.ts","assets/close.svg","components/NewTransactionModal/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","TransactionsContext","createContext","TransactionsProvider","children","useState","transactions","setTransactions","transactionInput","a","post","createdAt","Date","response","transaction","data","useEffect","get","then","Provider","value","createTransaction","useTransactions","useContext","Container","styled","header","Content","div","Header","onOpenNewTransactionModal","src","logo","alt","type","onClick","section","Summary","summary","reduce","acc","deposits","amount","total","withdraws","income","toLocaleString","style","currency","outcome","className","TransactionsTable","map","title","category","Intl","DateTimeFormat","format","id","main","Dashboard","form","TransactionTypeContainer","darken","NewTransactionModal","isOpen","onRequestClose","setTitle","setAmount","setType","setCategory","event","preventDefault","overlayClassName","close","onSubmit","htmlFor","name","placeholder","onChange","target","required","Number","min","GlobalStyle","createGlobalStyle","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","models","Model","seeds","server","db","loadData","routes","this","namespace","schema","all","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7aa761b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n    baseURL: \"http://localhost:3000/api\"\r\n});","import { createContext, useEffect, useState, ReactNode, useContext } from \"react\";\r\nimport { api } from \"../services/api\";\r\n\r\ninterface Transaction{\r\n    id: number;\r\n    title: string;\r\n    amount: number;\r\n    type: string;\r\n    category: string;\r\n    createdAt: string;\r\n}\r\n\r\ntype TransactionInput = Omit <Transaction, \"id\" | \"createdAt\">;\r\n\r\ninterface TransactionsProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\ninterface TransactionsContexData{\r\n    transactions: Transaction[];\r\n    createTransaction: (transaction: TransactionInput) => Promise<void>;\r\n}\r\n\r\nconst TransactionsContext = createContext<TransactionsContexData>(\r\n    {} as TransactionsContexData\r\n);\r\n\r\nexport function TransactionsProvider({children}: TransactionsProviderProps){\r\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n\r\n    useEffect(() => {\r\n        api.get(\"transactions\")\r\n            .then(response => setTransactions(response.data.transactions))\r\n    }, []);\r\n\r\n    async function createTransaction(transactionInput: TransactionInput){\r\n        const response = await api.post(\"/transactions\", {\r\n            ...transactionInput,\r\n            createdAt: new Date()\r\n        });\r\n        const { transaction } = response.data;\r\n\r\n        setTransactions([...transactions, transaction]);\r\n    }\r\n\r\n    return(\r\n        <TransactionsContext.Provider value = {{ transactions, createTransaction }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTransactions(){\r\n    const context = useContext(TransactionsContext);\r\n\r\n    return context;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.header`\r\n    background: var(--blue);\r\n\r\n    height: 13.25rem;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    margin: 0 auto 4.25rem auto;\r\n    padding: 0 1rem 0 1rem;\r\n\r\n    max-width: 70rem;\r\n    height: 9rem;\r\n\r\n    button{\r\n        background: var(--blue-light);\r\n\r\n        color: #FFF;\r\n        font-size: 1rem;\r\n\r\n        border: 0;\r\n        border-radius: 0.25rem;\r\n\r\n        padding: 0 2rem;\r\n\r\n        transition: filter 0.2s;\r\n\r\n        height: 3rem;\r\n\r\n        &:hover{\r\n            filter: brightness(0.85);\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import { Container } from \"./styles\";\r\nimport { Content } from \"./styles\";\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\ninterface HeaderProps{\r\n    onOpenNewTransactionModal: () => void;\r\n}\r\n\r\nexport function Header({onOpenNewTransactionModal} : HeaderProps){\r\n    return(\r\n        <Container>\r\n            <Content>\r\n                <img src = { logo } alt = \"dt money\" />\r\n                <button type = \"button\" onClick = {onOpenNewTransactionModal}>\r\n                    Nova transação\r\n                </button>\r\n            </Content>\r\n        </Container>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.e90c2d1e.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    display: flex;\r\n\r\n    justify-content: space-between;\r\n\r\n    div{\r\n        background: var(--shape);\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        justify-content: center;\r\n\r\n        color: var(--text-title);\r\n\r\n        border-radius: 6px;\r\n\r\n        margin: -4.25rem 0 0 0;\r\n        padding: 0 2rem 0 2rem;\r\n\r\n        width: 22rem;\r\n        height: 8.5rem;\r\n\r\n        header{\r\n            display: flex;\r\n\r\n            align-items: center;\r\n            justify-content: space-between;\r\n\r\n            margin: 0 0 0.46rem 0;\r\n        }\r\n\r\n        strong{\r\n            font-size: 2rem;\r\n            font-weight: 500;\r\n        }\r\n\r\n        &.greenlight{\r\n            background: var(--green);\r\n\r\n            color: var(--shape);\r\n        }\r\n    }\r\n`;","import { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\nimport income from \"../../assets/income.svg\";\r\nimport outcome from \"../../assets/outcome.svg\";\r\nimport total from \"../../assets/total.svg\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Summary(){\r\n    const {transactions} = useTransactions();\r\n\r\n    const summary = transactions.reduce((acc, transaction) => {\r\n        if(transaction.type === \"deposit\"){\r\n            acc.deposits += transaction.amount;\r\n            acc.total += transaction.amount;\r\n        }else{\r\n            acc.withdraws += transaction.amount;\r\n            acc.total -= transaction.amount;\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        deposits: 0,\r\n        withdraws: 0,\r\n        total: 0\r\n    });\r\n\r\n    return(\r\n        <Container>\r\n            <div>\r\n                <header>\r\n                    <p>Entradas</p>\r\n                    <img src = { income } alt = \"Entradas\"/>\r\n                </header>\r\n                <strong>{summary.deposits.toLocaleString(\"pt-br\", {style: \"currency\", currency: \"BRL\"})}</strong>\r\n            </div>\r\n            <div>\r\n                <header>\r\n                    <p>Saídas</p>\r\n                    <img src = { outcome } alt = \"Saídas\"/>\r\n                </header>\r\n                <strong>{summary.withdraws.toLocaleString(\"pt-br\", {style: \"currency\", currency: \"BRL\"})}</strong>\r\n            </div>\r\n            <div className = \"greenlight\">\r\n                <header>\r\n                    <p>Total</p>\r\n                    <img src = { total } alt = \"Total\"/>\r\n                </header>\r\n                <strong>{summary.total.toLocaleString(\"pt-br\", {style: \"currency\", currency: \"BRL\"})}</strong>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`    \r\n    table{\r\n        color: var(--text-body);\r\n\r\n        border-spacing: 0 0.5rem;\r\n\r\n        margin: 2rem 0 0 0;\r\n\r\n        width: 100%;\r\n\r\n        th{\r\n            font-weight: 400;\r\n            text-align: left;\r\n\r\n            height: 3.5rem;\r\n\r\n            &:first-child{\r\n                padding: 0 2rem 0 2rem;\r\n\r\n                width: 34rem;\r\n            }\r\n\r\n            &:nth-child(2){\r\n                width: 13.25rem;\r\n            }\r\n        }\r\n\r\n        td{\r\n            background: var(--shape);\r\n\r\n            height: 4rem;\r\n\r\n            &:first-child{\r\n                color: var(--text-title);\r\n\r\n                border-radius: 6px 0 0 6px;\r\n\r\n                padding: 0 2rem 0 2rem;\r\n\r\n                width: 34rem;\r\n            }\r\n\r\n            &:nth-child(2){\r\n                width: 13.25rem;\r\n            }\r\n\r\n            &:nth-child(3){\r\n                width: 13.25rem;\r\n            }\r\n\r\n            &:last-child{\r\n                border-radius: 0 6px 6px 0;\r\n            }\r\n\r\n            &.deposit{\r\n            color: var(--green);\r\n            }\r\n\r\n            &.withdraw{\r\n                color: var(--red);\r\n            }\r\n        }\r\n    }\r\n`;","import { useTransactions } from \"../../hooks/useTransactions\";\r\nimport { Container } from \"./styles\";\r\n\r\nexport function TransactionsTable(){\r\n    const {transactions} = useTransactions();\r\n\r\n    return(\r\n        <Container>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Título      </th>\r\n                        <th>Preço       </th>\r\n                        <th>Categoria   </th>\r\n                        <th>Data        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {transactions.map(transaction => (\r\n                        <tr key = {transaction.id}>\r\n                            <td>{transaction.title}</td>\r\n                            <td className = {transaction.type}>{transaction.type === \"deposit\" ? \"\" : \"- \"}{transaction.amount.toLocaleString(\"pt-br\", {style: \"currency\", currency: \"BRL\"})}</td>\r\n                            <td>{transaction.category}</td>\r\n                            <td>\r\n                                {new Intl.DateTimeFormat(\"pt-BR\").format(new Date(transaction.createdAt))}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Container>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.main`\r\n    margin: 0 auto;\r\n    padding: 0 1rem 0 1rem;\r\n\r\n    max-width: 70rem;\r\n`;","import { Summary } from \"../Summary\";\r\nimport { TransactionsTable } from \"../TransactionsTable\";\r\n\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nexport function Dashboard(){\r\n    return(\r\n        <Container>\r\n            <Summary/>\r\n            <TransactionsTable/>\r\n        </Container>\r\n    );\r\n}","import styled from \"styled-components\";\r\nimport { darken } from \"polished\";\r\n\r\nexport const Container = styled.form`\r\n    h2{\r\n        color: var(--text-title);\r\n\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n\r\n        padding: 0 0 2rem 0;\r\n    }\r\n\r\n    input{\r\n        background: #E7E9EE;\r\n\r\n        color: var(--text-body);\r\n\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n\r\n        border: 1px solid #D7D7D7;\r\n        border-radius: 6px;\r\n\r\n        box-sizing: border-box;\r\n        outline: none;\r\n\r\n        margin: 0 0 1rem 0;\r\n        padding: 0 1.5rem 0 1.5rem;\r\n\r\n        width: 100%;\r\n        height: 4rem;\r\n\r\n        &::placeholder{\r\n            color: var(--text-body);\r\n\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n        }\r\n    }\r\n\r\n    button.submit{\r\n        background: var(--green);\r\n\r\n        color: var(--shape);\r\n\r\n        font-size: 1rem;\r\n        font-weight: 600;\r\n\r\n        border: none;\r\n        border-radius: 6px;\r\n\r\n        outline: none;\r\n\r\n        margin: 0.5rem 0 0 0;\r\n\r\n        transition: filter 0.2s;\r\n\r\n        width: 100%;\r\n        height: 4rem;\r\n\r\n        &:hover{\r\n            filter: brightness(0.85);\r\n        }\r\n    }\r\n\r\n    .hide{\r\n        position: absolute;\r\n\r\n        overflow: hidden;\r\n\r\n        opacity: 0;\r\n\r\n        width: 0px;\r\n        height: 0px;\r\n    }\r\n`;\r\n\r\nexport const TransactionTypeContainer = styled.div`\r\n    margin: 0 0 1rem 0;\r\n\r\n    display: flex;\r\n\r\n    justify-content: space-between;\r\n\r\n    button{\r\n        background: transparent;\r\n\r\n        display: flex;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        border: 1px solid #969CB2;\r\n        border-radius: 6px;\r\n\r\n        box-sizing: border-box;\r\n        outline: none;\r\n\r\n        width: 14.75rem;\r\n        height: 4rem;\r\n\r\n        img{\r\n            margin: 0 1rem 0 0;\r\n\r\n            width: 2rem;\r\n            height: 2rem;\r\n        }\r\n\r\n        span{\r\n            color: var(--text-title);\r\n\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n        }\r\n\r\n        transition: 0.2s;\r\n\r\n        &:hover{\r\n            border-color: ${darken(0.6, \"#969CB2\")};\r\n        }\r\n    }\r\n\r\n    button.deposit{\r\n        background: rgba(18, 164, 84, 0.1);\r\n    }\r\n\r\n    button.withdraw{\r\n        background: rgba(230, 46, 78, 0.1);\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import { FormEvent, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\nimport { Container, TransactionTypeContainer } from \"./styles\";\r\n\r\nimport income from \"../../assets/income.svg\";\r\nimport outcome from \"../../assets/outcome.svg\";\r\nimport close from \"../../assets/close.svg\";\r\n\r\ninterface NewTransactionModalProps{\r\n    isOpen: boolean;\r\n    onRequestClose: () => void;\r\n}\r\n\r\nexport function NewTransactionModal({isOpen, onRequestClose}: NewTransactionModalProps){\r\n    const { createTransaction } = useTransactions();\r\n    \r\n    const [title, setTitle] = useState(\"\");\r\n    const [amount, setAmount] = useState(0);\r\n    const [type, setType] = useState(\"deposit\");\r\n    const [category, setCategory] = useState(\"\");\r\n\r\n    async function handleCreateNewTransaction(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        await createTransaction({\r\n            title,\r\n            amount,\r\n            category,\r\n            type\r\n        });\r\n\r\n        setTitle(\"\");\r\n        setAmount(0);\r\n        setType(\"desposit\");\r\n        setCategory(\"\");\r\n\r\n        onRequestClose();\r\n    }\r\n\r\n    return(\r\n        <Modal\r\n            isOpen = {isOpen}\r\n            onRequestClose = {onRequestClose}\r\n\t\t\toverlayClassName = \"react-modal-overlay\"\r\n\t\t\tclassName = \"react-modal-class\"\r\n        >\r\n            <button type = \"button\" className = \"closeModal\" onClick = {onRequestClose}>\r\n                <img src = {close} alt = \"Close modal\"/>\r\n            </button>\r\n\r\n            <Container onSubmit = {handleCreateNewTransaction}>\r\n                <h2>Cadastrar transação</h2>\r\n\r\n                <label htmlFor = \"title\" className = \"hide\">Nome</label>\r\n                <input\r\n                    id = \"title\"\r\n                    name = \"title\"\r\n                    type = \"text\"\r\n                    placeholder = \"Nome\"\r\n                    value = {title}\r\n                    onChange = {event => setTitle(event.target.value)}\r\n                    required\r\n                /> <br />\r\n\r\n                <label htmlFor = \"price\" className = \"hide\">Preço</label>\r\n                <input\r\n                    id = \"price\"\r\n                    name = \"price\"\r\n                    type = \"number\"\r\n                    placeholder = \"Preço\"\r\n                    value = {amount}\r\n                    onChange = {event => setAmount(Number(event.target.value))}\r\n                    min = \"0\"\r\n                    required\r\n                /> <br />\r\n\r\n                <TransactionTypeContainer>\r\n                    <button\r\n                        type = \"button\"\r\n                        className = {type === \"deposit\" ? \"deposit\" : \"\"}\r\n                        onClick = {() => {setType(\"deposit\");}}\r\n                    >\r\n                        <img src = {income} alt = \"\"/>\r\n                        <span>Entrada</span>\r\n                    </button>\r\n                    <button\r\n                        type = \"button\"\r\n                        className = {type === \"deposit\" ? \"\" : \"withdraw\"}\r\n                        onClick = {() => {setType(\"withdraw\");}}\r\n                    >\r\n                        <img src = {outcome} alt = \"\"/>\r\n                        <span>Saída</span>\r\n                    </button>\r\n                </TransactionTypeContainer>\r\n\r\n                <label htmlFor = \"category\" className = \"hide\">Categoria</label>\r\n                <input\r\n                    id = \"category\"\r\n                    name = \"category\"\r\n                    type = \"text\"\r\n                    placeholder = \"Categoria\"\r\n                    value = {category}\r\n                    onChange = {event => setCategory(event.target.value)}\r\n                    required\r\n                /> <br />\r\n\r\n                <button type = \"submit\" className = \"submit\">Cadastrar</button>\r\n            </Container>\r\n        </Modal>\r\n    );\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root{\r\n        --red: #E52E4D;\r\n        --green: #33CC95;\r\n        --blue: #5429CC;\r\n\r\n        --blue-light: #6933FF;\r\n\r\n        --text-title: #363F5F;\r\n        --text-body: #969CB2;\r\n\r\n        --background: #F0F2F5;\r\n        --shape: #FFFFFF;\r\n    }\r\n    \r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html{\r\n        @media(max-width: 1080px){\r\n            font-size: 93.75%;\r\n        }\r\n        \r\n        @media(max-width: 720px){\r\n            font-size: 87.5%;\r\n        }\r\n    }\r\n\r\n    body{\r\n        background: var(--background);\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, textarea, button{\r\n        font-family: \"Poppins\", sans-serif;\r\n        font-weight: 400;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong{\r\n        font-weight: 600;\r\n    }\r\n\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n\r\n    [disabled]{\r\n        opacity: 0.6;\r\n        cursor: not-allowed;\r\n    }\r\n\r\n    .react-modal-overlay{\r\n        background: rgba(0, 0, 0, 0.5);\r\n\r\n        display: flex;\r\n\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        position: fixed;\r\n\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n\r\n    .react-modal-class{\r\n        background: var(--background);\r\n\r\n        position: relative;\r\n\r\n        padding: 4rem 3rem 4rem 3rem;\r\n\r\n        width: 36rem;\r\n\r\n        button.closeModal{\r\n            background: transparent;\r\n\r\n            position: absolute;\r\n\r\n            display: flex;\r\n\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            border: none;\r\n            border-radius: 50%;\r\n\r\n            top: 0;\r\n            right: 0;\r\n\r\n            margin: 1.25rem 1.25rem 0 0;\r\n\r\n            transition: 0.2s;\r\n\r\n            width: 1.5rem;\r\n            height: 1.5rem;\r\n\r\n            &:hover{\r\n                background: rgba(0, 0, 0, 0.1);\r\n            }\r\n        }\r\n    }\r\n`","import { useState } from \"react\";\nimport Modal from \"react-modal\";\n\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\n\nimport { Header } from \"./components/Header\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { NewTransactionModal } from './components/NewTransactionModal';\n\t\nimport { GlobalStyle } from \"./styles/global\";\n\nModal.setAppElement(\"#root\");\n\nexport function App(){\n\tconst [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n    function handleOpenNewTransactionModal(){\n        setIsNewTransactionModalOpen(true);\n    }\n\n    function handleCloseNewTransactionModal(){\n        setIsNewTransactionModalOpen(false);\n    }\n\n\treturn(\n\t\t<TransactionsProvider>\n\t\t\t<Header onOpenNewTransactionModal = {handleOpenNewTransactionModal}/>\n\t\t\t<Dashboard/>\n\n            <NewTransactionModal\n\t\t\t\tisOpen = {isNewTransactionModalOpen}\n\t\t\t\tonRequestClose = {handleCloseNewTransactionModal}\n\t\t\t/>\n\n\t\t\t<GlobalStyle/>\n\t\t</TransactionsProvider>\n\t);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createServer, Model } from \"miragejs\";\nimport { App } from './App';\n\ncreateServer({\n\tmodels:{\n\t\ttransaction: Model,\n\t},\n\n\tseeds(server){\n\t\tserver.db.loadData({\n\t\t\ttransactions: [\n\t\t\t\t{\n\t\t\t\t\tid: 1,\n\t\t\t\t\ttitle: \"Freelancer de website\",\n\t\t\t\t\ttype: \"deposit\",\n\t\t\t\t\tcategory: \"Dev\",\n\t\t\t\t\tamount: 6000,\n\t\t\t\t\tcreatedAt: new Date(\"2021-02-12 09:00:00\")\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 2,\n\t\t\t\t\ttitle: \"Aluguel\",\n\t\t\t\t\ttype: \"withdraw\",\n\t\t\t\t\tcategory: \"Casa\",\n\t\t\t\t\tamount: 2100,\n\t\t\t\t\tcreatedAt: new Date(\"2021-02-14 11:00:00\")\n\t\t\t\t}\n\t\t\t],\n\t\t})\n\t},\n\n\troutes(){\n\t\tthis.namespace = \"api\";\n\n\t\tthis.get(\"/transactions\", () => {\n\t\t\treturn this.schema.all(\"transaction\");\n\t\t});\n\n\t\tthis.post(\"/transactions\", (schema, request) => {\n\t\t\tconst data = JSON.parse(request.requestBody)\n\n\t\t\treturn schema.create(\"transaction\", data);\n\t\t});\n\t}\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}